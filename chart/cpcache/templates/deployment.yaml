apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cpcache.name" . }}
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "cpcache.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  # serviceName: {{ include "cpcache.name" . }}-svc
  selector:
    matchLabels:
      {{- include "cpcache.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "cpcache.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      # serviceAccountName: {{ include "cpcache.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      initContainers:
        - name: pre-mount-vol
          image: alpine:latest
          command: [ "/bin/sh", "-c" ]
          args: ["mkdir -p /var/cache/cpcache/state; mkdir /etc/cpcache; mkdir -p /var/cache/cpcache/pkg/community/os/x86_64; mkdir -p /var/cache/cpcache/pkg/community-staging/os/x86_64; mkdir -p /var/cache/cpcache/pkg/community-testing/os/x86_64; mkdir -p /var/cache/cpcache/pkg/core/os/x86_64; mkdir -p /var/cache/cpcache/pkg/extra/os/x86_64; mkdir -p /var/cache/cpcache/pkg/gnome-unstable/os/x86_64; mkdir -p /var/cache/cpcache/pkg/kde-unstable/os/x86_64; mkdir -p /var/cache/cpcache/pkg/multilib/os/x86_64; mkdir -p /var/cache/cpcache/pkg/multilib-testing/os/x86_64; mkdir -p /var/cache/cpcache/pkg/staging/os/x86_64; mkdir -p /var/cache/cpcache/pkg/testing/os/x86_64"]
          volumeMounts:
          - name: {{ .Values.volumeMounts.name1 }}
            mountPath: "/var/cache/cpcache" # {{ .Values.volumeMounts.mountpath1 }}
      # volumes:
      # - name: {{ .Values.volumes.name1 }}
      #   persistentVolumeClaim:
      #     claimName: {{ .Values.volumes.claimName }}
      containers:
        - name: {{ .Chart.Name }}
          stdin: true
          tty: true
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: MIX_ENV
            value: "prod"
          # command: ["/bin/sh"] 
          # args: ["-c", "chown -R cpcache:cpcache /var/cache/cpcache"]
          securityContext:
            allowPrivilegeEscalation: false
            runAsUser: 0
          volumeMounts:
          - name: {{ .Values.volumeMounts.name1 }}
            mountPath: {{ .Values.volumeMounts.mountpath1 }}
            # subPath: {{ .Values.volumeMounts.subpath }}
          - name: {{ .Values.volumeMounts.name2 }}
            mountPath: {{ .Values.volumeMounts.mountpath2 }}
          ports:
            - name: http
              containerPort: 7070
              protocol: TCP
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
      - name: {{ .Values.volumes.name1 }}
        persistentVolumeClaim:
          claimName: {{ .Values.volumes.claimName }}
      - name: {{ .Values.volumes.name2 }}
        configMap:
          name: {{ .Values.volumes.configMap }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: cpcache-pvc
  namespace: cpcache
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
  # volumeName: cpcache-vol-pv
  storageClassName: longhorn
